name: Download Postman Collection

on:
  workflow_dispatch:

jobs:
  download-collection-postman:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Postman Collection
        run: |
          POSTMAN_API_KEY=${{ secrets.POSTMAN_API_KEY_TEST }}
          COLLECTION_ID=${{ secrets.COLLECTION_ID_TEST }}
          mkdir -p utils/api_json
          curl -L "https://api.postman.com/collections/$COLLECTION_ID?access_key=$POSTMAN_API_KEY" -o utils/api_json/api_response.json

      - name: Format JSON
        run: |
          cd utils/api_json
          jq . api_response.json > formatted_api_response.json
          mv formatted_api_response.json api_response.json

      - name: Commit and push JSON file
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add utils/api_json/api_response.json
          git commit -m "Add API response JSON"
          git pull
          git push
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  create-folder:
    needs: download-collection-postman
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Pull Latest Changes
        run: git pull origin test
        working-directory: ${{ github.workspace }}

      - name: Create Folder (if it doesn't exist)
        run: |
          if [ ! -d "utils/request_test_folder" ]; then
            mkdir -p utils/request_test_folder
            touch utils/request_test_folder/.gitkeep  # Create a placeholder file if needed
          else
            echo "Folder already exists, skipping creation."
          fi
        working-directory: ${{ github.workspace }}

      - name: Commit and Push Changes (if there are changes)
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit -m "Create request_test_folder"
            git push origin test  # Replace 'test' with your branch name
          else
            echo "No changes to commit, skipping."
          fi
        working-directory: ${{ github.workspace }}


  execute-python-script:
    needs: create-folder
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Pull Latest Changes
        run: git pull origin test
        working-directory: ${{ github.workspace }}

      - name: Move Files to request_test_folder (if not already there)
        run: |
          if [ ! -e "utils/request_test_folder/main_file_folder_manager.py" ]; then
            mv main_file_folder_manager.py utils/request_test_folder/
          fi
          if [ ! -e "utils/request_test_folder/class_file_folder_manager.py" ]; then
            mv class_file_folder_manager.py utils/request_test_folder/
          fi
        working-directory: ${{ github.workspace }}

      - name: Change to request_test_folder
        run: cd utils/request_test_folder
        working-directory: ${{ github.workspace }}

      - name: Execute Python Script
        run: |
          python main_file_folder_manager.py
        working-directory: ${{ github.workspace }}/utils/request_test_folder

      - name: Commit and Push Changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Execute main script"
          git push origin main  # Replace 'main' with your branch name
        working-directory: ${{ github.workspace }}
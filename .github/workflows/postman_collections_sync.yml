name: Postman Collections Sync

on:
  push:
    branches:
      - test

jobs:
  download-collection-postman:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download Postman Collection and Environment Variables
        run: |
          POSTMAN_API_KEY=${{ secrets.POSTMAN_API_KEY_TEST }}
          POSTMAN_API_KEY_ENV=${{ secrets.POSTMAN_API_KEY_TEST_ENV_VAR }}
          COLLECTION_ID=${{ secrets.COLLECTION_ID_TEST }}
          POSTMAN_ENVIRONMENT_ID=${{ secrets.POSTMAN_ENVIRONMENT_ID_TEST }} 

          curl -L "https://api.postman.com/collections/$COLLECTION_ID?access_key=$POSTMAN_API_KEY" -o api_response.json
          curl -X GET "https://api.postman.com/environments/$POSTMAN_ENVIRONMENT_ID" \
            -H "X-Api-Key: $POSTMAN_API_KEY_ENV" \
            -o postman_environment.json

      - name: Format Api Response JSON
        run: |
          jq . api_response.json > formatted_api_response.json
          mv formatted_api_response.json api_response.json

      - name: Format Postman Environment JSON
        run: |
          jq . postman_environment.json > formatted_postman_environment.json
          mv formatted_postman_environment.json postman_environment.json

      - name: Commit and push JSON file
        run: |
          git config --local user.email "bassey@walter-group.com"
          git config --local user.name "EkeminiBassey1"
          git add api_response.json postman_environment.json
          git commit -m "Add API response JSON"
          git pull
          git push
        env:
          GH_PAT: ${{ secrets.GH_PAT }}

  create-folder:
    needs: download-collection-postman
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Pull Latest Changes
        run: git pull origin test
        working-directory: ${{ github.workspace }}

      - name: Create Folder (if it doesn't exist)
        run: |
          if [ ! -d "request_test_folder" ]; then
            mkdir -p request_test_folder
            touch request_test_folder/.gitkeep
          else
            echo "Folder already exists, skipping creation."
          fi
        working-directory: ${{ github.workspace }}

      - name: Create Folder (if it doesn't exist)
        run: |
          if [ ! -d "backup_collection" ]; then
            mkdir -p backup_collection
            touch backup_collection/.gitkeep 
          else
            echo "Folder already exists, skipping creation."
          fi
        working-directory: ${{ github.workspace }}

      - name: Commit and Push Changes (if there are changes)
        run: |
          git config --local user.email "bassey@walter-group.com"
          git config --local user.name "EkeminiBassey1"
          if [[ -n $(git status -s) ]]; then
            git add .
            git commit -m "Create request test & backup collection folders"
            git push origin test
          else
            echo "No changes to commit, skipping."
          fi
        working-directory: ${{ github.workspace }}

  execute-python-script:
    needs: create-folder
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Pull Latest Changes
        run: git pull origin test
        working-directory: ${{ github.workspace }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Execute Python Script
        run: python main_file_folder_manager.py
        working-directory: ${{ github.workspace }}

      - name: Commit and Push Changes
        run: |
          git config --local user.email "bassey@walter-group.com"
          git config --local user.name "EkeminiBassey1"
          git add .
          git commit -m "Execute main script"
          git push origin test
        working-directory: ${{ github.workspace }}

  move_file:
    needs: execute-python-script
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Pull Latest Changes
        run: git pull origin test
        working-directory: ${{ github.workspace }}

      - name: Move File
        run: |
          mv postman_environment.json request_test_folder/
          mv api_response.json backup_collection/
          git config --local user.email "bassey@walter-group.com"
          git config --local user.name "EkeminiBassey1"
          git add .
          git commit -m "Move postman_environment.json to request_test_folder"
          git push origin test
        working-directory: ${{ github.workspace }}

  encrypt:
    needs: move_file
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Pull Latest Changes
        run: git pull origin test
        working-directory: ${{ github.workspace }}

      - name: Encrypt File
        run: |
          gpg --batch --passphrase trapla@123@plavo@TESTautomation2323 --symmetric --cipher-algo AES256 -o request_test_folder/postman_environment.json.gpg request_test_folder/postman_environment.json

      - name: Verify Encrypted File
        run: |
          ls request_test_folder 

      - name: Commit and Push Encrypted File
        run: |
          git config --local user.email "bassey@walter-group.com"
          git config --local user.name "EkeminiBassey1"
          git add request_test_folder/postman_environment.json.gpg
          git commit -m "Encrypt postman_environment.json file"
          git push origin test